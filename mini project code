#include<iostream>
#include<fstream>
#include<cctype>
#include<iomanip>
using namespace std;

// class used in project
class account
{
    int accno;
    char name[40];
    int deposit;
    char type;
public:
   void create_account();
   void show_account() const;
   void modify();
   void depo(int);
   void withdraw(int);
   void report() const;
   int retaccno() const;
   int retdeposit() const;
   char rettype() const;
}; 
//class ends here

void account:: create_account()
{
    cout<<"\n enter the account no :";
    cin>>accno;
    cout<<"\n\n enter the name of account user :";
    cin.ignore();
    cin.getline(name,40);
    cout<<"\n enter type  of the account(C/S) : ";
    cin>>type;
    type=toupper(type);
    cout<<"enter the Minimum amount(>=5000 for saving account and >=20000 for current account):";
    cin>>deposit;
    cout<<"\n\n\n\nAccount created......";
}


void account ::show_account() const
{
    cout<<"\nAcount no : "<<accno;
    cout<<"\nAccount user name :";
    cout<<name;
    cout<<"\n type of account :"<<type;
    cout<<"\nBalance amount : "<<deposit;
}


void account::modify()
{
    cout<<"\nAccount no :" <<accno;
    cout<<"\nModify Account user name :";
    cout<<name;
    cout<<"\nModify type of account :"<<type;
    cout<<"\nModify Balance amount : "<<deposit;
}

void account::depo(int x)
{
    deposit+=x;
}

void account::withdraw(int x)
{
    deposit-=x;
}

void account::report() const
{
    cout<<accno<<setw(15)<<" "<<name<<setw(15)<<" "<<type<<setw(10)<<deposit<<endl;
}

int account::retaccno() const
{
	return accno;
}

int account::retdeposit() const
{
	return deposit;
}

char account::rettype() const
{
	return type;
}

void write_account();	
void display_sp(int);	
void modify_account(int);
void delete_account(int);	
void display_all();		
void deposit_withdraw(int, int); 
void intro();	

 int main()
 {
    char ch;
    int num;
    intro();
    do
    {
      system("cls");
    cout<<"\n\n\n\n\tMAIN MENU";
    cout<<"\n\n\t01. NEW ACCOUNT";
    cout<<"\n\n\t02. DEPOSIT AMOUNT";
    cout<<"\n\n\t03. WITHDRAW AMOUNT";
    cout<<"\n\n\t04. BALANCE ENQUIRY";
    cout<<"\n\n\t05. MODIFY ACCOUNT";
    cout<<"\n\n\t06. CLOSE AN ACCOUNT";
    cout<<"\n\n\t07. ALL ACCOUNT USER LIST";
    cout<<"\n\n\t08. EXIT";
    cout<<"\n\n\t select your option (1-8) ";
    cin>>ch;
    system("cls");
    switch(ch)
		{
		case '1':
			write_account();
			break;
		case '2':
			cout<<"\n\n\tEnter The account No. : "; cin>>num;
			deposit_withdraw(num, 1);
			break;
		case '3':
			cout<<"\n\n\tEnter The account No. : "; cin>>num;
			deposit_withdraw(num, 2);
			break;
		case '4': 
			cout<<"\n\n\tEnter The account No. : "; cin>>num;
			display_sp(num);
			break;
		case '5':
			display_all();
			break;
		case '6':
			cout<<"\n\n\tEnter The account No. : "; cin>>num;
			delete_account(num);
			break;
		 case '7':
			cout<<"\n\n\tEnter The account No. : "; cin>>num;
			modify_account(num);
			break;
		 case '8':
			cout<<"\n\n\tfor using bank managemnt system";
			break;
		 default :cout<<"\a";
		}
		cin.ignore();
		cin.get();
	}
    while(ch!='8');
	return 0;
}


void write_account()
{
	account ac;
	ofstream outFile;
	outFile.open("account.dat");
	ac.create_account();
	outFile.write(reinterpret_cast<char *> (&ac), sizeof(account));
	outFile.close();
}

void display_sp(int n)
{
	account ac;
	bool flag=false;
	ifstream inFile;
	inFile.open("account.dat");
	if(!inFile)
	{
		cout<<"File could not be open !! Press any Key...";
		return; 
	}
	cout<<"\nBALANCE DETAILS\n";

    	while(inFile.read(reinterpret_cast<char *> (&ac), sizeof(account)))
	{
		if(ac.retaccno()==n)
		{
			ac.show_account();
			flag=true;
		}
	}
	inFile.close();
	if(flag==false)
		cout<<"\n\nAccount number does not exist";
}

void modify_account(int n)
{
	bool found=false;
	account ac;
	fstream File;
	File.open("account.dat");
	if(!File)
	{
		cout<<"File could not be open !! Press any Key...";
		return;
	}
	while(!File.eof() && found==false)
	{
		File.read(reinterpret_cast<char *> (&ac), sizeof(account));
		if(ac.retaccno()==n)
		{
			ac.show_account();
			cout<<"\n\nEnter The New Details of account"<<endl;
			ac.modify();
			int pos=(-1)*static_cast<int>(sizeof(account));
			File.seekp(pos,ios::cur);
			File.write(reinterpret_cast<char *> (&ac), sizeof(account));
			cout<<"\n\n\t Record Updated";
			found=true;
		  }
	}
	File.close();
	if(found==false)
		cout<<"\n\n Record Not Found ";
}


void delete_account(int n)
{
	account ac;
	ifstream inFile;
	ofstream outFile;
	inFile.open("account.dat");
	if(!inFile)
	{
		cout<<"File could not be open !! Press any Key...";
		return;
	}
	outFile.open("Temp.dat");
	inFile.seekg(0);
	while(inFile.read(reinterpret_cast<char *> (&ac), sizeof(account)))
	{
		if(ac.retaccno()!=n)
		{
			outFile.write(reinterpret_cast<char *> (&ac), sizeof(account));
		}
	}
	inFile.close();
	outFile.close();
	remove("account.dat");
	rename("Temp.dat","account.dat");
	cout<<"\n\n\tRecord Deleted ..";
}

void display_all()
{
	account ac;
	ifstream inFile;
	inFile.open("account.dat");
	if(!inFile)
	{
		cout<<"File could not be open !! Press any Key...";
		return;
	}
	cout<<"\n\n\t\tACCOUNT USER LIST\n\n";
	cout<<"====================================================\n";
	cout<<"A/c no.      NAME           Type  Balance\n";
	cout<<"====================================================\n";
	while(inFile.read(reinterpret_cast<char *> (&ac), sizeof(account)))
	{
		ac.report();
	}
	inFile.close();
}

void deposit_withdraw(int n, int option)
{
	int amt;
	bool found=false;
	account ac;
	fstream File;
	File.open("account.dat");
	if(!File)
	{
		cout<<"File could not be open !! Press any Key...";
		return;
	}
	while(!File.eof() && found==false)
	{
		File.read(reinterpret_cast<char *> (&ac), sizeof(account));
		if(ac.retaccno()==n)
		{
			ac.show_account();
			if(option==1)
			{
				cout<<"\n\n\tTO DEPOSITE AMOUNT ";
				cout<<"\n\nEnter The amount to be deposited";
				cin>>amt;
				ac.depo(amt);
			}
			if(option==2)
			{
				cout<<"\n\n\tTO WITHDRAW AMOUNT ";
				cout<<"\n\nEnter The amount to be withdraw";
				cin>>amt;
				int bal=ac.retdeposit()-amt;
				if((bal<5000 && ac.rettype()=='S') || (bal<10000 && ac.rettype()=='C'))
					cout<<"Insufficience balance";
				else
					ac.withdraw(amt);
			}
			int pos=(-1)*static_cast<int>(sizeof(ac));
			File.seekp(pos,ios::cur);
			File.write(reinterpret_cast<char *> (&ac), sizeof(account));
			cout<<"\n\n\t Record Updated";
			found=true;
	       }
         }
	File.close();
	if(found==false)
		cout<<"\n\n Record Not Found ";
}

void intro()
{
	cout<<"\n\n\n\t  BANK";
	cout<<"\n\n\tMANAGEMENT";
	cout<<"\n\n\t  SYSTEM";
	cout<<"\n\n\n\nMADE BY : HARSH RAJ";
	cout<<"\n\nUNIVERSITY : GRAPHIC ERA UNIVERSITY DEHRADUN";
	cin.get();
}
